name: Backend Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/test-backend.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/test-backend.yml'

jobs:
  test:
    name: Run Backend Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    strategy:
      matrix:
        python-version: ['3.12']

    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_USER: synapse_test
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: synapse_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio httpx

      - name: Run linting
        run: |
          pip install ruff
          ruff check app/

      - name: Run tests with coverage
        env:
          DATABASE_URL: postgresql://synapse_test:test_password@localhost:5432/synapse_test
          REDIS_URL: redis://localhost:6379/0
          SECRET_KEY: test-secret-key-for-ci-only
          ALGORITHM: HS256
          ACCESS_TOKEN_EXPIRE_MINUTES: 60
        run: pytest --cov=app --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./backend/coverage.xml
          flags: backend
          fail_ci_if_error: false

      - name: Archive test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-python-${{ matrix.python-version }}
          path: backend/htmlcov
          retention-days: 7
