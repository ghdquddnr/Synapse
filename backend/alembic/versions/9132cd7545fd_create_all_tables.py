"""Create all tables

Revision ID: 9132cd7545fd
Revises: 001
Create Date: 2025-10-15 13:24:25.232628

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from pgvector.sqlalchemy import Vector

# revision identifiers, used by Alembic.
revision: str = "9132cd7545fd"
down_revision: Union[str, Sequence[str], None] = "001"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "keywords",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_keywords_name", "keywords", ["name"], unique=False)
    op.create_index(op.f("ix_keywords_name"), "keywords", ["name"], unique=True)
    op.create_table(
        "users",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_table(
        "devices",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("device_name", sa.String(length=255), nullable=False),
        sa.Column("device_type", sa.String(length=50), nullable=False),
        sa.Column("device_model", sa.String(length=100), nullable=True),
        sa.Column("os_version", sa.String(length=50), nullable=True),
        sa.Column("app_version", sa.String(length=50), nullable=False),
        sa.Column("last_checkpoint", sa.String(length=255), nullable=True),
        sa.Column("last_sync_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("push_token", sa.String(length=512), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_devices_last_sync_at", "devices", ["last_sync_at"], unique=False)
    op.create_index("idx_devices_user_id", "devices", ["user_id"], unique=False)
    op.create_index(op.f("ix_devices_user_id"), "devices", ["user_id"], unique=False)
    op.create_table(
        "notes",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("body", sa.Text(), nullable=False),
        sa.Column("importance", sa.Integer(), nullable=False),
        sa.Column("source_url", sa.String(length=2048), nullable=True),
        sa.Column("image_path", sa.String(length=512), nullable=True),
        sa.Column("embedding", Vector(1024), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "server_timestamp",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_notes_deleted_at", "notes", ["deleted_at"], unique=False)
    op.create_index("idx_notes_importance", "notes", ["importance"], unique=False)
    op.create_index("idx_notes_updated_at", "notes", ["updated_at"], unique=False)
    op.create_index("idx_notes_user_id", "notes", ["user_id"], unique=False)
    op.create_index(op.f("ix_notes_deleted_at"), "notes", ["deleted_at"], unique=False)
    op.create_index(op.f("ix_notes_updated_at"), "notes", ["updated_at"], unique=False)
    op.create_index(op.f("ix_notes_user_id"), "notes", ["user_id"], unique=False)
    op.create_table(
        "reflections",
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id", "date"),
    )
    op.create_index("idx_reflections_date", "reflections", ["date"], unique=False)
    op.create_index("idx_reflections_user_date", "reflections", ["user_id", "date"], unique=False)
    op.create_index("idx_reflections_user_id", "reflections", ["user_id"], unique=False)
    op.create_table(
        "weekly_reports",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("week_key", sa.String(length=10), nullable=False),
        sa.Column("summary", sa.Text(), nullable=False),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_weekly_reports_user_id", "weekly_reports", ["user_id"], unique=False)
    op.create_index(
        "idx_weekly_reports_user_week", "weekly_reports", ["user_id", "week_key"], unique=True
    )
    op.create_index("idx_weekly_reports_week_key", "weekly_reports", ["week_key"], unique=False)
    op.create_index(op.f("ix_weekly_reports_user_id"), "weekly_reports", ["user_id"], unique=False)
    op.create_index(
        op.f("ix_weekly_reports_week_key"), "weekly_reports", ["week_key"], unique=False
    )
    op.create_table(
        "note_keywords",
        sa.Column("note_id", sa.String(), nullable=False),
        sa.Column("keyword_id", sa.Integer(), nullable=False),
        sa.Column("score", sa.Float(), nullable=False),
        sa.Column("source", sa.Enum("AI", "MANUAL", name="keywordsource"), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["keyword_id"], ["keywords.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["note_id"], ["notes.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("note_id", "keyword_id"),
    )
    op.create_index("idx_note_keywords_keyword_id", "note_keywords", ["keyword_id"], unique=False)
    op.create_index("idx_note_keywords_note_id", "note_keywords", ["note_id"], unique=False)
    op.create_index("idx_note_keywords_score", "note_keywords", ["score"], unique=False)
    op.create_index(
        op.f("ix_note_keywords_keyword_id"), "note_keywords", ["keyword_id"], unique=False
    )
    op.create_table(
        "relations",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("from_note_id", sa.String(), nullable=False),
        sa.Column("to_note_id", sa.String(), nullable=False),
        sa.Column(
            "relation_type",
            sa.Enum("RELATED", "PARENT_CHILD", "SIMILAR", "CUSTOM", name="relationtype"),
            nullable=False,
        ),
        sa.Column("rationale", sa.Text(), nullable=True),
        sa.Column("source", sa.Enum("AI", "MANUAL", name="relationsource"), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["from_note_id"], ["notes.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["to_note_id"], ["notes.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_relations_from_note_id", "relations", ["from_note_id"], unique=False)
    op.create_index(
        "idx_relations_from_to", "relations", ["from_note_id", "to_note_id"], unique=False
    )
    op.create_index("idx_relations_to_note_id", "relations", ["to_note_id"], unique=False)
    op.create_index("idx_relations_user_id", "relations", ["user_id"], unique=False)
    op.create_index(op.f("ix_relations_from_note_id"), "relations", ["from_note_id"], unique=False)
    op.create_index(op.f("ix_relations_to_note_id"), "relations", ["to_note_id"], unique=False)
    op.create_index(op.f("ix_relations_user_id"), "relations", ["user_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_relations_user_id"), table_name="relations")
    op.drop_index(op.f("ix_relations_to_note_id"), table_name="relations")
    op.drop_index(op.f("ix_relations_from_note_id"), table_name="relations")
    op.drop_index("idx_relations_user_id", table_name="relations")
    op.drop_index("idx_relations_to_note_id", table_name="relations")
    op.drop_index("idx_relations_from_to", table_name="relations")
    op.drop_index("idx_relations_from_note_id", table_name="relations")
    op.drop_table("relations")
    op.drop_index(op.f("ix_note_keywords_keyword_id"), table_name="note_keywords")
    op.drop_index("idx_note_keywords_score", table_name="note_keywords")
    op.drop_index("idx_note_keywords_note_id", table_name="note_keywords")
    op.drop_index("idx_note_keywords_keyword_id", table_name="note_keywords")
    op.drop_table("note_keywords")
    op.drop_index(op.f("ix_weekly_reports_week_key"), table_name="weekly_reports")
    op.drop_index(op.f("ix_weekly_reports_user_id"), table_name="weekly_reports")
    op.drop_index("idx_weekly_reports_week_key", table_name="weekly_reports")
    op.drop_index("idx_weekly_reports_user_week", table_name="weekly_reports")
    op.drop_index("idx_weekly_reports_user_id", table_name="weekly_reports")
    op.drop_table("weekly_reports")
    op.drop_index("idx_reflections_user_id", table_name="reflections")
    op.drop_index("idx_reflections_user_date", table_name="reflections")
    op.drop_index("idx_reflections_date", table_name="reflections")
    op.drop_table("reflections")
    op.drop_index(op.f("ix_notes_user_id"), table_name="notes")
    op.drop_index(op.f("ix_notes_updated_at"), table_name="notes")
    op.drop_index(op.f("ix_notes_deleted_at"), table_name="notes")
    op.drop_index("idx_notes_user_id", table_name="notes")
    op.drop_index("idx_notes_updated_at", table_name="notes")
    op.drop_index("idx_notes_importance", table_name="notes")
    op.drop_index("idx_notes_deleted_at", table_name="notes")
    op.drop_table("notes")
    op.drop_index(op.f("ix_devices_user_id"), table_name="devices")
    op.drop_index("idx_devices_user_id", table_name="devices")
    op.drop_index("idx_devices_last_sync_at", table_name="devices")
    op.drop_table("devices")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_keywords_name"), table_name="keywords")
    op.drop_index("idx_keywords_name", table_name="keywords")
    op.drop_table("keywords")
    # ### end Alembic commands ###
